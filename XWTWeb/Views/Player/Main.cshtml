@model List<XWTWeb.Models.Player>
@{
    ViewBag.Title = "Player Home";
}


<div class="container">
    <div class="row pl-0">
        <div class="col-12 col-md-6 col-12 col-md-6 pl-0 pt-2 pb-2">
            <h2>@ViewBag.Title</h2>
        </div>
        <div class="p-2 col d-flex justify-content-end align-content-center">
            <button type="button" class="btn btn-success far fa-plus-square" style="font-size:xx-large" onclick="AddNewPlayer();"></button>
        </div>
    </div>
    <div class="row">
        <table id="playerMainTable" class="table table-hover table-striped">
            <thead class="thead-light">
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Delete</th>
                    <th scope="col">Undo</th>
                </tr>
            </thead>
            <tbody>
                <tr id="playerMainTableRowTemplate" style="display:none" data-rowtype="NewPlayer">
                    <td><input type="text" class="col form-control form-control-sm" value="" placeholder="Name" data-valuetype="Name" /></td>
                    <td><input type="text" class="col form-control form-control-sm" value="" placeholder="Email Address" data-valuetype="Email" /></td>
                    <td><a href="#" title="Delete" style="font-weight:bold" class="btn btn-danger fas fa-trash-alt" onclick="RemovePrompt(this);"></a> </td>
                    <td>&nbsp;</td>
                </tr>

                @foreach (XWTWeb.Models.Player player in Model)
                {
                    <tr id="playerMainTableRow_@player.Id" data-playerid="@player.Id">
                        <td><input readonly id="playerMainTableRowName_@player.Id" type="text" class="col form-control form-control-sm" value="@player.Name" placeholder="Name" data-valuetype="Name" data-originalvalue="@player.Name" ondblclick="UnlockInput(this);" /></td>
                        <td><input readonly id="playerMainTableRowEmail_@player.Id" type="text" class="col form-control form-control-sm" value="@player.Email" placeholder="Email Address" data-valuetype="Email" data-originalvalue="@player.Email" ondblclick="UnlockInput(this);" /></td>
                        <td><a href="#" title="Delete" style="font-weight:bold" class="btn btn-danger fas fa-trash-alt" onclick="RemovePrompt(this);"></a> </td>
                        <td><a href="#" title="Undo" style="font-weight:bold" class="btn btn-warning fas fa-undo" onclick="UndoPrompt(@player.Id);"></a> </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @*<input type="submit" class="btn btn-primary" value="Submit" />*@
    <button type="button" class="btn btn-primary" onclick="UpdatePlayer();">Testing</button>
</div>

<script type="text/javascript">

    var intNewPlayerCount = 0;
    function AddNewPlayer() {
        var rowTemplate = $("#playerMainTableRowTemplate").clone();

        rowTemplate.attr('id', 'newPlayerRow_' + intNewPlayerCount)
            .appendTo($("#playerMainTable tbody"))
            .show();

        intNewPlayerCount++;
    }

    function RemovePrompt(btn) {
        bootbox.confirm({
            size: "small",
            message: "Are you sure you want to remove this player?",
            callback: function (result) {
                if (result) $(btn).parent().parent().remove();
            }
        });
    }

    function UndoPrompt(Id) {
        bootbox.confirm({
            size: "small",
            message: "Do you want to undo changes to this player?",
            callback: function (result) {
                if (result) {
                    $("#playerMainTableRow_" + Id + " td input").each(function () {
                        $(this).val($(this).data('originalvalue'));
                        $(this).prop('readonly', true);
                    });
                }
            }
        });
    }

    function UnlockInput(inpt) {
        if ($(inpt).prop('readonly')) {
            $(inpt).prop('readonly', false);
            $(inpt)[0].focus();
        }
    }

    function UpdatePlayer() {
        var jsonData = [];
        var playerId;

        $("tr[id^=playerMainTableRow_]").each(function () {
            playerId = $(this).data('playerid');
            var player = {
                Id: playerId,
                Name: $("#playerMainTableRowName_" + playerId).val(),
                Group: '',
                Email: $("#playerMainTableRowEmail_" + playerId).val(),
                Active: true
            };
            jsonData.push(player);
        });

        $.ajax({
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            dataType: "json",
            type: "POST",
            url: "/Player/UpdatePlayerData",
            data: { players: JSON.stringify(jsonData) },
            success: function (data) {

            }
        });

    }

</script>