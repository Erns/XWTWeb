@model List<XWTWeb.Models.Player>
@{
    ViewBag.Title = "Players";
}


<form>

    <div class="container pb-2 bg-white">
        <div class="row sticky-top sticky-offset bg-light border-bottom border-secondary">
            <div class="col-6 pt-2 pb-2">
                <h2>@ViewBag.Title</h2>
            </div>
            <div class="p-2 col d-flex justify-content-end align-content-center">
                <button type="button" title="Add New Player" class="btn btn-outline-success fas fa-plus-square" style="font-size:xx-large" onclick="AddNewPlayer();"></button>
                <button type="button" title="Save" class="btn btn-success far fa-save ml-3" style="font-size:xx-large" onclick="UpdatePlayer();"></button>
            </div>
        </div>
        <div class="row pt-2">
            <table id="playerMainTable" class="table table-responsive-sm pl-4 pr-4 table-sm table-hover table-striped">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Group</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (XWTWeb.Models.Player player in Model)
                    {
                        <tr readonly id="playerMainTableRow_@player.Id" data-playerid="@player.Id">
                            <td class="align-middle"><input readonly id="playerMainTableRowName_@player.Id" type="text" class="required col form-control form-control-sm" value="@player.Name" placeholder="Name" data-valuetype="Name" data-originalvalue="@player.Name" ondblclick="UnlockInput(this);" ontouchstart="UnlockInput(this);" onfocus="$(this).popover('dispose');" /></td>
                            <td class="align-middle"><input readonly id="playerMainTableRowEmail_@player.Id" type="text" class="col form-control form-control-sm" value="@player.Email" placeholder="Email Address" data-valuetype="Email" data-originalvalue="@player.Email" ondblclick="UnlockInput(this);" ontouchstart="UnlockInput(this);" /></td>
                            <td class="align-middle"><input readonly id="playerMainTableRowGroup_@player.Id" type="text" class="col form-control form-control-sm" value="@player.Group" placeholder="Group" data-valuetype="Group" data-originalvalue="@player.Group" ondblclick="UnlockInput(this);" ontouchstart="UnlockInput(this);" /></td>
                            <td class="d-flex justify-content-center align-content-center">
                                <a href="#" title="Delete" style="font-weight:bold" class="btn btn-danger fas fa-trash-alt m-0 mr-1 p-2" onclick="RemovePrompt(this);"></a>
                                <a href="#" title="Undo" style="font-weight:bold" class="btn btn-warning fas fa-undo m-0 ml-1 p-2" onclick="UndoPrompt(@player.Id);"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

        @*Hidden div with our row template (this way DataTables doesn't accidentally include it')*@
        <div class="row" style="display:none;">
            <table>
                <tr id="playerMainTableRowTemplate" style="display:none" data-rowtype="NewPlayer">
                    <td class="align-middle"><input type="text" class="required col form-control form-control-sm" value="" placeholder="Name" data-valuetype="Name" onfocus="$(this).popover('dispose');" /></td>
                    <td class="align-middle"><input type="text" class="col form-control form-control-sm" value="" placeholder="Email Address" data-valuetype="Email" /></td>
                    <td class="align-middle"><input type="text" class="col form-control form-control-sm" value="" placeholder="Group" data-valuetype="Group" /></td>
                    <td class="d-flex justify-content-center align-content-center">
                        <a href="#" title="Delete" style="font-weight:bold" class="btn btn-danger fas fa-trash-alt m-0 p-2" onclick="RemovePlayerRow(this);"></a>
                    </td>
                </tr>
            </table>
        </div>

    </div>

</form>

<script type="text/javascript">

    $(document).ready(function () {
        SetCurrentPage("PlayerMain");

        /* Create an array with the values of all the input boxes in a column */
        $.fn.dataTable.ext.order['dom-text'] = function (settings, col) {
            return this.api().column(col, { order: 'index' }).nodes().map(function (td, i) {
                return $('input', td).val();
            });
        }

        $("#playerMainTable").DataTable({
            "columns": [
                { "orderDataType": "dom-text", type: 'string' },
                { "orderDataType": "dom-text", type: 'string' },
                { "orderDataType": "dom-text", type: 'string' },
                null
            ]
        } );
        $(".dataTables_wrapper").css("width", "100%");
        $("#playerMainTable_length").addClass("pl-md-4");
        $("#playerMainTable_filter").addClass("pr-md-4");

        //window.addEventListener('beforeunload', function (e) { confirmNavigation(e); });
       
    });

    //Add new player row
    var intNewPlayerCount = 0;
    function AddNewPlayer() {
        var rowTemplate = $("#playerMainTableRowTemplate").clone();

        rowTemplate.attr('id', 'newPlayerRow_' + intNewPlayerCount)
            .prependTo($("#playerMainTable tbody"))
            .show();

        intNewPlayerCount++;

        SetIsDirty(true);
    }

    //Delete player
    function RemovePrompt(btn) {
        bootbox.confirm({
            size: "small",
            message: "Are you sure you want to remove this player?",
            callback: function (result) {
                if (result) {
                    RemovePlayerRow(btn);
                }
            }
        });
    }

    //Delete player Row
    function RemovePlayerRow(btn) {
        $(btn).parent().parent().hide();
        $('.popover').remove();
        SetIsDirty(true);
    }

    //Undo changes made
    function UndoPrompt(Id) {
        bootbox.confirm({
            size: "small",
            message: "Do you want to undo changes to this player?",
            callback: function (result) {
                if (result) {
                    $("#playerMainTableRow_" + Id + " td input").each(function () {
                        $(this).val($(this).data('originalvalue'));
                        $(this).prop('readonly', true);
                        $(this).parent().parent().prop('readonly', true).attr('readonly', true);
                    });
                }
            }
        });
    }

    //Unlock field to edit
    function UnlockInput(inpt) {
        if ($(inpt).prop('readonly')) {
            $(inpt).prop('readonly', false);
            $(inpt).parent().parent().prop('readonly', false).attr('readonly', false);
            $(inpt).blur().focus();
            var tmp = $(inpt).val();
            $(inpt).val('').val(tmp);
            SetIsDirty(true);
        }
    }

    function UpdatePlayer(btn) {
        btn = btn || "";

        var jsonData = [];
        var playerId;

        //Pull info from edited Players
        $("tr[id^=playerMainTableRow_]").each(function () {
            if ((!$(this).attr('readonly') && !$(this).prop('readonly')) || !$(this).is(':visible')) {
                playerId = $(this).data('playerid');
                var player = {
                    Id: playerId,
                    Name: $("#playerMainTableRowName_" + playerId).val(),
                    Email: $("#playerMainTableRowEmail_" + playerId).val(),
                    Group: $("#playerMainTableRowGroup_" + playerId).val(),
                    Active: true,
                    DateDeleted: null
                };

                //If not visible, then deleted
                if (!$(this).is(':visible')) {
                    player.Active = false;
                    player.DateDeleted = new Date().toLocaleString();
                }                   

                jsonData.push(player);
            }
        });

        //Pull info for new Players
        $("tr[id^=newPlayerRow_]").each(function () {
            if ($(this).is(':visible')) {
                var player = {
                    Id: 0,
                    Name: $(this).find("input[data-valuetype='Name']").val(),
                    Email: $(this).find("input[data-valuetype='Email']").val(),
                    Group: $(this).find("input[data-valuetype='Group']").val(),
                    Active: true
                };
                jsonData.push(player);
            }
        });


        if (CheckRequiredFields()) {
            BBoxLoading();

            //Update player info
            $.ajax({
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                dataType: "json",
                type: "POST",
                url: "/Player/UpdatePlayerData",
                data: { players: JSON.stringify(jsonData) },
                complete: function (data) {
                    SetIsDirty(false);
                    if (btn != "") {
                        $(btn).click();
                        location.href = $(btn).attr('href');
                    }
                    else location.reload();
                }
            });
        }


    }

</script>